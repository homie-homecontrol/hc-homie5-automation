name: CI and Publish

on:
  push:
    branches: ["optimize-build"]
  pull_request:
    branches: ["main"]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PLATFORMS: linux/amd64
  # PLATFORMS: linux/amd64, linux/arm/v7, linux/arm64

jobs:
  # test:
  #   name: Build & Test
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Set up Rust
  #       uses: dtolnay/rust-toolchain@stable
  #
  #     - name: Install system dependencies
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y libc6-dev lua5.4 liblua5.4-dev pkg-config
  #
  #     - name: Cache Cargo registry
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.cargo/registry
  #           ~/.cargo/git
  #         key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
  #         restore-keys: |
  #           cargo-${{ runner.os }}-
  #
  #     - name: Build
  #       run: cargo build --verbose
  #
  #     - name: Run tests
  #       run: cargo test --verbose
  #
  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    # if: github.event_name == 'release' && github.event.action == 'created'

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set up QEMU for multi-arch builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          platforms: ${{ env.PLATFORMS }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha # enable cache retrieval from GitHub Actions cache
          cache-to: type=gha,mode=max # enable cache export (mode=max for all layers)

