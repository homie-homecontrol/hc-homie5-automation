name: CI and Publish

on:
  push:
    branches: ["optimize-build"]
  pull_request:
    branches: ["main"]
  release:
    types: [created]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # test:
  #   name: Build & Test (Rust)
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Set up Rust
  #       uses: dtolnay/rust-toolchain@stable
  #
  #     - name: Install system dependencies
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y libc6-dev lua5.4 liblua5.4-dev pkg-config
  #
  #     - name: Cache Cargo
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.cargo/registry
  #           ~/.cargo/git
  #           target
  #         key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-cargo-
  #
  #     - name: Build
  #       run: cargo build --verbose
  #
  #     - name: Run tests
  #       run: cargo test --verbose

  docker:
    name: Docker Image
    runs-on: ubuntu-latest
    # if: github.event_name == 'release' && github.event.action == 'created'

    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64, linux/arm/v7]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image for ${{ matrix.platform }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}-${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  manifest:
    name: Create Multi-Arch Manifest
    runs-on: ubuntu-latest
    needs: docker
    if: github.event_name == 'release' && github.event.action == 'created'

    permissions:
      contents: read
      packages: write

    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create multi-arch manifest
        run: |
          docker buildx imagetools create \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}-linux/amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}-linux/arm64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}}:${{ env.RELEASE_VERSION }}-linux/arm/v7

